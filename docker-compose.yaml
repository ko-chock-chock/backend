services:
  app:
    image: kimsudang/nest-js-app:latest
    container_name: app_container
    ports:
      - '8080:8080'
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGO_HOST}:27017/${MONGO_INITDB_DATABASE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - ko-chock-chock

  mysql:
    image: mysql:8.0
    container_name: mysql_container
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      LC_ALL: C.UTF-8
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1', '-u', 'root', '-p ${MYSQL_ROOT_PASSWORD}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ko-chock-chock

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - '6379:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD} --port 6379 --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD}', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ko-chock-chock

  mongodb:
    image: mongo:5.0.9
    container_name: mongo_container
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: ['CMD-SHELL', "echo 'db.runCommand({ping: 1})' | mongo --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ko-chock-chock

volumes:
  mysql_data:
  redis_data:
  mongo_data:

networks:
  ko-chock-chock:
    driver: bridge
